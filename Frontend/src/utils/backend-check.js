import { authAPI, userAPI, chatAPI } from './api';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–µ–∫–µ–Ω–¥–∞
export const checkBackendConnection = async () => {
  try {
    // –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
    const response = await fetch('http://127.0.0.1:8000/api/', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
    });
    
    if (response.ok) {
      console.log('‚úÖ Backend is available');
      return true;
    } else {
      console.warn('‚ö†Ô∏è Backend responded with error:', response.status);
      return false;
    }
  } catch (error) {
    console.warn('‚ùå Backend is not available:', error.message);
    return false;
  }
};

// –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
checkBackendConnection().then(isAvailable => {
  if (!isAvailable) {
    console.warn(`
üîß SETUP REQUIRED:
1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Django backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://127.0.0.1:8000
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS –≤ Django
3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã
4. –°–æ–∑–¥–∞–π—Ç–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: python manage.py createsuperuser

üìù Backend –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞:
- API: http://127.0.0.1:8000/api/
- WebSocket: ws://127.0.0.1:8000/ws/
    `);
  }
});

export { authAPI, userAPI, chatAPI };
